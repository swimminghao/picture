<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.vitorgalvao.alfred.appversion</string>
	<key>connections</key>
	<dict>
		<key>56E911C8-B422-41A5-B703-DBA1649E1DA1</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>D7A8FF94-E45E-4FD4-BA1A-11237326A0E1</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>778BD714-0E96-4EA4-A4FD-751D05C92D2D</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>D7E96C4B-C158-4A5C-9D3A-7C6C37A6557D</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>D7A8FF94-E45E-4FD4-BA1A-11237326A0E1</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>2F51BDA7-F08C-4264-B552-7A482E912727</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>D7E96C4B-C158-4A5C-9D3A-7C6C37A6557D</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>D7A8FF94-E45E-4FD4-BA1A-11237326A0E1</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>79EAF480-9E98-4ED6-A0BC-7162FC442749</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Vítor Galvão</string>
	<key>description</key>
	<string>Show version number of installed apps</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>AppVersion</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<true/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>av</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Getting versions of apps in /Applications…</string>
				<key>script</key>
				<string>require 'json'
require 'open3'
require 'pathname'

apps = Pathname('/Applications').children
         .concat(Pathname('/Applications/Utilities').children)
         .map(&amp;:to_path)
         .sort_by { |p| File.basename(p).downcase }
         .select { |e| e.end_with?('.app') }

script_filter_items = []

apps.each do |app|
  version = Open3.capture2('mdls', '-raw', '-name', 'kMDItemVersion', app).first
  next if version == '(null)'
  name = File.basename(app, '.app')
  script_filter_items.push(title: name, subtitle: version, arg: version, icon: { type: 'fileicon', path: app })
end

puts({ items: script_filter_items }.to_json)</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>Show version number of installed apps</string>
				<key>title</key>
				<string>AppVersion</string>
				<key>type</key>
				<integer>2</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>56E911C8-B422-41A5-B703-DBA1649E1DA1</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>autopaste</key>
				<false/>
				<key>clipboardtext</key>
				<string>{query}</string>
				<key>transient</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.clipboard</string>
			<key>uid</key>
			<string>D7A8FF94-E45E-4FD4-BA1A-11237326A0E1</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># THESE VARIABLES MUST BE SET. SEE THE ONEUPDATER README FOR AN EXPLANATION OF EACH.
readonly remote_info_plist="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/source/info.plist"
readonly workflow_url="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/${alfred_workflow_name}.alfredworkflow"
readonly download_type='direct'
readonly frequency_check='4'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED!
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  local -r notificator="$(find . -type d -name 'Notificator.app')"
  if [[ -n "${notificator}" ]]; then
    "${notificator}/Contents/Resources/Scripts/notificator" --message "${1}" --title "${alfred_workflow_name}" --subtitle 'A new version is available'
    return
  fi

  local -r terminal_notifier="$(find . -type f -name 'terminal-notifier')"
  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}" -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${download_type}" =~ ^(direct|page|github_release)$ ]] || abort "'download_type' (${download_type}) needs to be one of 'direct', 'page', or 'github_release'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  if ! url_exists "${remote_info_plist}"; then abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."; fi # Remote sanity check

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"

  if [[ "${local_version}" == "${remote_version}" ]]; then
    touch "${local_info_plist}" # Reset timer by touching local file
    exit 0
  fi

  if [[ "${download_type}" == 'page' ]]; then
    notification 'Opening download page…'
    open "${workflow_url}"
    exit 0
  fi

  download_url="$([[ "${download_type}" == 'github_release' ]] &amp;&amp; curl --silent "https://api.github.com/repos/${workflow_url}/releases/latest" | grep 'browser_download_url' | head -1 | sed -E 's/.*browser_download_url": "(.*)"/\1/' || echo "${workflow_url}")"

  if url_exists "${download_url}"; then
    notification 'Downloading and installing…'
    curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${download_url}"
    open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
  else
    abort "'workflow_url' (${download_url}) appears to not be reachable."
  fi
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>2F51BDA7-F08C-4264-B552-7A482E912727</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>mdls -raw -name kMDItemVersion "${1}"</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>D7E96C4B-C158-4A5C-9D3A-7C6C37A6557D</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alignment</key>
				<integer>0</integer>
				<key>backgroundcolor</key>
				<string></string>
				<key>fadespeed</key>
				<integer>0</integer>
				<key>fillmode</key>
				<integer>0</integer>
				<key>font</key>
				<string></string>
				<key>largetypetext</key>
				<string>{query}</string>
				<key>textcolor</key>
				<string></string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.largetype</string>
			<key>uid</key>
			<string>79EAF480-9E98-4ED6-A0BC-7162FC442749</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>acceptsmulti</key>
				<false/>
				<key>filetypes</key>
				<array>
					<string>com.apple.application-bundle</string>
				</array>
				<key>name</key>
				<string>App version</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.action</string>
			<key>uid</key>
			<string>778BD714-0E96-4EA4-A4FD-751D05C92D2D</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Call `av` and a list of your top-level apps at `/Applications` and `/Applications/Utilities` will be shown with their version numbers. Action any of them and the version number will be copied to the clipboard.

![](https://i.imgur.com/w6N7Qkr.png)

If the app you want to check the version of is located anywhere else, you can find it and use the File Action on it for the same effect. This will also show the version as `Large Type`.

![](https://i.imgur.com/7v5hno8.png)</string>
	<key>uidata</key>
	<dict>
		<key>2F51BDA7-F08C-4264-B552-7A482E912727</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<integer>580</integer>
			<key>ypos</key>
			<integer>20</integer>
		</dict>
		<key>56E911C8-B422-41A5-B703-DBA1649E1DA1</key>
		<dict>
			<key>xpos</key>
			<integer>30</integer>
			<key>ypos</key>
			<integer>20</integer>
		</dict>
		<key>778BD714-0E96-4EA4-A4FD-751D05C92D2D</key>
		<dict>
			<key>xpos</key>
			<integer>30</integer>
			<key>ypos</key>
			<integer>160</integer>
		</dict>
		<key>79EAF480-9E98-4ED6-A0BC-7162FC442749</key>
		<dict>
			<key>xpos</key>
			<integer>380</integer>
			<key>ypos</key>
			<integer>160</integer>
		</dict>
		<key>D7A8FF94-E45E-4FD4-BA1A-11237326A0E1</key>
		<dict>
			<key>xpos</key>
			<integer>380</integer>
			<key>ypos</key>
			<integer>20</integer>
		</dict>
		<key>D7E96C4B-C158-4A5C-9D3A-7C6C37A6557D</key>
		<dict>
			<key>xpos</key>
			<integer>200</integer>
			<key>ypos</key>
			<integer>160</integer>
		</dict>
	</dict>
	<key>version</key>
	<string>1.0.4</string>
	<key>webaddress</key>
	<string>https://vitorgalvao.com/</string>
</dict>
</plist>
